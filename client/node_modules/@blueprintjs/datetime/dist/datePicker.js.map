{"version":3,"sources":["../src/datePicker.tsx"],"names":[],"mappings":"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","file":"datePicker.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport { AbstractComponent, Button, IProps, Utils } from \"@blueprintjs/core\";\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDayPicker from \"react-day-picker\";\n\nimport * as Classes from \"./common/classes\";\nimport * as DateUtils from \"./common/dateUtils\";\nimport * as Errors from \"./common/errors\";\n\nimport { DatePickerCaption } from \"./datePickerCaption\";\nimport { getDefaultMaxDate, getDefaultMinDate, IDatePickerBaseProps } from \"./datePickerCore\";\n\nexport interface IDatePickerProps extends IDatePickerBaseProps, IProps {\n    /**\n     * Allows the user to clear the selection by clicking the currently selected day.\n     * @default true\n     */\n    canClearSelection?: boolean;\n\n    /**\n     * Props to pass to ReactDayPicker. See API documentation\n     * [here](http://react-day-picker.js.org/docs/api-daypicker.html).\n     *\n     * The following props are managed by the component and cannot be configured:\n     * `canChangeMonth`, `captionElement`, `fromMonth` (use `minDate`), `month` (use\n     * `initialMonth`), `toMonth` (use `maxDate`).\n     */\n    dayPickerProps?: ReactDayPicker.Props;\n\n    /**\n     * Initial day the calendar will display as selected.\n     * This should not be set if `value` is set.\n     */\n    defaultValue?: Date;\n\n    /**\n     * Called when the user selects a day.\n     * If being used in an uncontrolled manner, `selectedDate` will be `null` if the user clicks the currently selected\n     * day. If being used in a controlled manner, `selectedDate` will contain the day clicked no matter what.\n     * `hasUserManuallySelectedDate` is true if the user selected a day, and false if the date was automatically changed\n     * by the user navigating to a new month or year rather than explicitly clicking on a date in the calendar.\n     */\n    onChange?: (selectedDate: Date, hasUserManuallySelectedDate: boolean) => void;\n\n    /**\n     * Whether the bottom bar displaying \"Today\" and \"Clear\" buttons should be shown.\n     * @default false\n     */\n    showActionsBar?: boolean;\n\n    /**\n     * The currently selected day. If this prop is provided, the component acts in a controlled manner.\n     */\n    value?: Date;\n}\n\nexport interface IDatePickerState {\n    displayMonth?: number;\n    displayYear?: number;\n    selectedDay?: number;\n    value?: Date;\n}\n\nexport class DatePicker extends AbstractComponent<IDatePickerProps, IDatePickerState> {\n    public static defaultProps: IDatePickerProps = {\n        canClearSelection: true,\n        dayPickerProps: {},\n        maxDate: getDefaultMaxDate(),\n        minDate: getDefaultMinDate(),\n        showActionsBar: false,\n    };\n\n    public static displayName = \"Blueprint.DatePicker\";\n\n    private ignoreNextMonthChange = false;\n\n    public constructor(props?: IDatePickerProps, context?: any) {\n        super(props, context);\n\n        let value: Date = null;\n        if (props.value !== undefined) {\n            value = props.value;\n        } else if (props.defaultValue != null) {\n            value = props.defaultValue;\n        }\n\n        let selectedDay: number;\n        if (value !== null) {\n            selectedDay = value.getDate();\n        }\n\n        let initialMonth: Date;\n        const today = new Date();\n        if (props.initialMonth != null) {\n            initialMonth = props.initialMonth;\n        } else if (value != null) {\n            initialMonth = value;\n        } else if (DateUtils.isDayInRange(today, [props.minDate, props.maxDate])) {\n            initialMonth = today;\n        } else {\n            initialMonth = DateUtils.getDateBetween([props.minDate, props.maxDate]);\n        }\n\n        this.state = {\n            displayMonth: initialMonth.getMonth(),\n            displayYear: initialMonth.getFullYear(),\n            selectedDay,\n            value,\n        };\n    }\n\n    public render() {\n        const {\n            className,\n            dayPickerProps,\n            locale,\n            localeUtils,\n            maxDate,\n            minDate,\n            modifiers,\n            showActionsBar,\n        } = this.props;\n        const { displayMonth, displayYear } = this.state;\n\n        return (\n            <div className={classNames(Classes.DATEPICKER, className)}>\n                <ReactDayPicker\n                    enableOutsideDays={true}\n                    locale={locale}\n                    localeUtils={localeUtils}\n                    modifiers={modifiers}\n                    {...dayPickerProps}\n                    canChangeMonth={true}\n                    captionElement={this.renderCaption}\n                    disabledDays={this.getDisabledDaysModifier()}\n                    fromMonth={minDate}\n                    month={new Date(displayYear, displayMonth)}\n                    onDayClick={this.handleDayClick}\n                    onMonthChange={this.handleMonthChange}\n                    selectedDays={this.state.value}\n                    toMonth={maxDate}\n                />\n                {showActionsBar ? this.renderOptionsBar() : null}\n            </div>\n        );\n    }\n\n    public componentWillReceiveProps(nextProps: IDatePickerProps) {\n        if (nextProps.value !== this.props.value) {\n            let { displayMonth, displayYear, selectedDay } = this.state;\n            if (nextProps.value != null) {\n                displayMonth = nextProps.value.getMonth();\n                displayYear = nextProps.value.getFullYear();\n                selectedDay = nextProps.value.getDate();\n            }\n            this.setState({\n                displayMonth,\n                displayYear,\n                selectedDay,\n                value: nextProps.value,\n            });\n        }\n\n        super.componentWillReceiveProps(nextProps);\n    }\n\n    protected validateProps(props: IDatePickerProps) {\n        const { defaultValue, initialMonth, maxDate, minDate, value } = props;\n        if (defaultValue != null && !DateUtils.isDayInRange(defaultValue, [minDate, maxDate])) {\n            throw new Error(Errors.DATEPICKER_DEFAULT_VALUE_INVALID);\n        }\n\n        if (initialMonth != null && !DateUtils.isMonthInRange(initialMonth, [minDate, maxDate])) {\n            throw new Error(Errors.DATEPICKER_INITIAL_MONTH_INVALID);\n        }\n\n        if (maxDate != null && minDate != null && maxDate < minDate && !DateUtils.areSameDay(maxDate, minDate)) {\n            throw new Error(Errors.DATEPICKER_MAX_DATE_INVALID);\n        }\n\n        if (value != null && !DateUtils.isDayInRange(value, [minDate, maxDate])) {\n            throw new Error(Errors.DATEPICKER_VALUE_INVALID);\n        }\n    }\n\n    private disabledDays = (day: Date) => !DateUtils.isDayInRange(day, [this.props.minDate, this.props.maxDate]);\n\n    private getDisabledDaysModifier = () => {\n        const { dayPickerProps: { disabledDays } } = this.props;\n\n        return disabledDays instanceof Array ? [this.disabledDays, ...disabledDays] : [this.disabledDays, disabledDays];\n    };\n\n    private renderCaption = (props: ReactDayPicker.CaptionElementProps) => (\n        <DatePickerCaption\n            {...props}\n            maxDate={this.props.maxDate}\n            minDate={this.props.minDate}\n            onMonthChange={this.handleMonthSelectChange}\n            onYearChange={this.handleYearSelectChange}\n        />\n    );\n\n    private renderOptionsBar() {\n        return (\n            <div className={Classes.DATEPICKER_FOOTER}>\n                <Button\n                    className=\"pt-minimal pt-datepicker-footer-button\"\n                    onClick={this.handleTodayClick}\n                    text=\"Today\"\n                />\n                <Button\n                    className=\"pt-minimal pt-datepicker-footer-button\"\n                    onClick={this.handleClearClick}\n                    text=\"Clear\"\n                />\n            </div>\n        );\n    }\n\n    private handleDayClick = (\n        day: Date,\n        modifiers: ReactDayPicker.DayModifiers,\n        e: React.MouseEvent<HTMLDivElement>,\n    ) => {\n        Utils.safeInvoke(this.props.dayPickerProps.onDayClick, day, modifiers, e);\n\n        let newValue = day;\n\n        if (this.props.canClearSelection && modifiers.selected) {\n            newValue = null;\n        }\n\n        if (this.props.value === undefined) {\n            // component is uncontrolled\n            if (!modifiers.disabled) {\n                const displayMonth = day.getMonth();\n                const displayYear = day.getFullYear();\n                const selectedDay = day.getDate();\n                this.setState({\n                    displayMonth,\n                    displayYear,\n                    selectedDay,\n                    value: newValue,\n                });\n            }\n        }\n\n        if (!modifiers.disabled) {\n            Utils.safeInvoke(this.props.onChange, newValue, true);\n            if (this.state.value != null && this.state.value.getMonth() !== day.getMonth()) {\n                this.ignoreNextMonthChange = true;\n            }\n        } else {\n            // rerender base component to get around bug where you can navigate past bounds by clicking days\n            this.forceUpdate();\n        }\n    };\n\n    private computeValidDateInSpecifiedMonthYear(displayYear: number, displayMonth: number): Date {\n        const { minDate, maxDate } = this.props;\n        const maxDaysInMonth = new Date(displayYear, displayMonth + 1, 0).getDate();\n        let { selectedDay } = this.state;\n\n        if (selectedDay > maxDaysInMonth) {\n            selectedDay = maxDaysInMonth;\n        }\n\n        // matches the underlying react-day-picker timestamp behavior\n        let value = new Date(displayYear, displayMonth, selectedDay, 12);\n\n        if (value < minDate) {\n            value = minDate;\n        } else if (value > maxDate) {\n            value = maxDate;\n        }\n\n        return value;\n    }\n\n    private handleMonthChange = (newDate: Date) => {\n        const displayMonth = newDate.getMonth();\n        const displayYear = newDate.getFullYear();\n        let { value } = this.state;\n\n        if (value !== null) {\n            value = this.computeValidDateInSpecifiedMonthYear(displayYear, displayMonth);\n            if (this.ignoreNextMonthChange) {\n                this.ignoreNextMonthChange = false;\n            } else {\n                // if handleDayClick just got run, it means the user selected a date in a new month,\n                // so don't run onChange again\n                Utils.safeInvoke(this.props.onChange, value, false);\n            }\n        }\n\n        Utils.safeInvoke(this.props.dayPickerProps.onMonthChange, value);\n\n        this.setStateWithValueIfUncontrolled({ displayMonth, displayYear }, value);\n    };\n\n    private handleMonthSelectChange = (displayMonth: number) => {\n        let { value } = this.state;\n\n        if (value !== null) {\n            value = this.computeValidDateInSpecifiedMonthYear(value.getFullYear(), displayMonth);\n            Utils.safeInvoke(this.props.onChange, value, false);\n        }\n\n        Utils.safeInvoke(this.props.dayPickerProps.onMonthChange, value);\n\n        this.setStateWithValueIfUncontrolled({ displayMonth }, value);\n    };\n\n    private handleYearSelectChange = (displayYear: number) => {\n        let { displayMonth, value } = this.state;\n\n        if (value !== null) {\n            value = this.computeValidDateInSpecifiedMonthYear(displayYear, displayMonth);\n            Utils.safeInvoke(this.props.onChange, value, false);\n            displayMonth = value.getMonth();\n        } else {\n            const { minDate, maxDate } = this.props;\n            const minYear = minDate.getFullYear();\n            const maxYear = maxDate.getFullYear();\n            const minMonth = minDate.getMonth();\n            const maxMonth = maxDate.getMonth();\n\n            if (displayYear === minYear && displayMonth < minMonth) {\n                displayMonth = minMonth;\n            } else if (displayYear === maxYear && displayMonth > maxMonth) {\n                displayMonth = maxMonth;\n            }\n        }\n\n        Utils.safeInvoke(this.props.dayPickerProps.onMonthChange, value);\n\n        this.setStateWithValueIfUncontrolled({ displayMonth, displayYear }, value);\n    };\n\n    private setStateWithValueIfUncontrolled(newState: IDatePickerState, value: Date) {\n        if (this.props.value === undefined) {\n            // uncontrolled mode means we track value in state\n            newState.value = value;\n        }\n        return this.setState(newState);\n    }\n\n    private handleClearClick = () => {\n        if (this.props.value === undefined) {\n            this.setState({ value: null });\n        }\n        Utils.safeInvoke(this.props.onChange, null, true);\n    };\n\n    private handleTodayClick = () => {\n        const value = new Date();\n        const displayMonth = value.getMonth();\n        const displayYear = value.getFullYear();\n        const selectedDay = value.getDate();\n        if (this.props.value === undefined) {\n            this.setState({ displayMonth, displayYear, selectedDay, value });\n        } else {\n            this.setState({ displayMonth, displayYear, selectedDay });\n        }\n        Utils.safeInvoke(this.props.onChange, value, true);\n    };\n}\n\nexport const DatePickerFactory = React.createFactory(DatePicker);\n"]}