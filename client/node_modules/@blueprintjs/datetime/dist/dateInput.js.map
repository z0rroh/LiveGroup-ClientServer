{"version":3,"sources":["../src/dateInput.tsx"],"names":[],"mappings":"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","file":"dateInput.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as moment from \"moment\";\nimport * as React from \"react\";\nimport * as ReactDayPicker from \"react-day-picker\";\n\nimport {\n    AbstractComponent,\n    HTMLInputProps,\n    IInputGroupProps,\n    InputGroup,\n    IPopoverProps,\n    IProps,\n    Popover,\n    Position,\n    Utils,\n} from \"@blueprintjs/core\";\n\nimport {\n    fromDateToMoment,\n    fromMomentToDate,\n    isMomentInRange,\n    isMomentNull,\n    isMomentValidAndInRange,\n    toLocalizedDateString,\n} from \"./common/dateUtils\";\nimport { DATEINPUT_WARN_DEPRECATED_OPEN_ON_FOCUS, DATEINPUT_WARN_DEPRECATED_POPOVER_POSITION } from \"./common/errors\";\nimport { DatePicker } from \"./datePicker\";\nimport { getDefaultMaxDate, getDefaultMinDate, IDatePickerBaseProps } from \"./datePickerCore\";\nimport { DateTimePicker } from \"./dateTimePicker\";\nimport { TimePickerPrecision } from \"./timePicker\";\n\nexport interface IDateInputProps extends IDatePickerBaseProps, IProps {\n    /**\n     * Allows the user to clear the selection by clicking the currently selected day.\n     * Passed to `DatePicker` component.\n     * @default true\n     */\n    canClearSelection?: boolean;\n\n    /**\n     * Whether the calendar popover should close when a date is selected.\n     * @default true\n     */\n    closeOnSelection?: boolean;\n\n    /**\n     * Props to pass to ReactDayPicker. See API documentation\n     * [here](http://react-day-picker.js.org/docs/api-daypicker.html).\n     *\n     * The following props are managed by the component and cannot be configured:\n     * `canChangeMonth`, `captionElement`, `fromMonth` (use `minDate`), `month` (use\n     * `initialMonth`), `toMonth` (use `maxDate`).\n     */\n    dayPickerProps?: ReactDayPicker.Props;\n\n    /**\n     * Whether the date input is non-interactive.\n     * @default false\n     */\n    disabled?: boolean;\n\n    /**\n     * The default date to be used in the component when uncontrolled.\n     */\n    defaultValue?: Date;\n\n    /**\n     * The format of the date. See http://momentjs.com/docs/#/displaying/format/.\n     * @default \"YYYY-MM-DD\"\n     */\n    format?: string;\n\n    /**\n     * Props to pass to the [input group](#core/components/forms/input-group.javascript-api).\n     * `disabled` and `value` will be ignored in favor of the top-level props on this component.\n     * `type` is fixed to \"text\" and `ref` is not supported; use `inputRef` instead.\n     */\n    inputProps?: HTMLInputProps & IInputGroupProps;\n\n    /**\n     * The error message to display when the date selected is invalid.\n     * @default \"Invalid date\"\n     */\n    invalidDateMessage?: string;\n\n    /**\n     * Called when the user selects a new valid date through the `DatePicker` or by typing\n     * in the input.\n     */\n    onChange?: (selectedDate: Date) => void;\n\n    /**\n     * Called when the user finishes typing in a new date and the date causes an error state.\n     * If the date is invalid, `new Date(undefined)` will be returned. If the date is out of range,\n     * the out of range date will be returned (`onChange` is not called in this case).\n     */\n    onError?: (errorDate: Date) => void;\n\n    /**\n     * If `true`, the popover will open when the user clicks on the input.\n     * @deprecated since 1.13.0.\n     * @default true\n     */\n    openOnFocus?: boolean;\n\n    /**\n     * The error message to display when the date selected is out of range.\n     * @default \"Out of range\"\n     */\n    outOfRangeMessage?: string;\n\n    /**\n     * The position the date popover should appear in relative to the input box.\n     * @default Position.BOTTOM\n     * @deprecated since v1.15.0, use `popoverProps.position`\n     */\n    popoverPosition?: Position;\n\n    /**\n     * Props to pass to the `Popover`.\n     * Note that `content`, `autoFocus`, and `enforceFocus` cannot be changed.\n     */\n    popoverProps?: Partial<IPopoverProps> & object;\n\n    /**\n     * Element to render on right side of input.\n     */\n    rightElement?: JSX.Element;\n\n    /**\n     * The currently selected day. If this prop is provided, the component acts in a controlled manner.\n     * To display no date in the input field, pass `null` to the value prop. To display an invalid date error\n     * in the input field, pass `new Date(undefined)` to the value prop.\n     */\n    value?: Date;\n\n    /**\n     * Adds a time chooser to the bottom of the popover.\n     * Passed to the `DateTimePicker` component.\n     */\n    timePrecision?: TimePickerPrecision;\n}\n\nexport interface IDateInputState {\n    value?: moment.Moment;\n    valueString?: string;\n    isInputFocused?: boolean;\n    isOpen?: boolean;\n}\n\nexport class DateInput extends AbstractComponent<IDateInputProps, IDateInputState> {\n    public static defaultProps: IDateInputProps = {\n        closeOnSelection: true,\n        dayPickerProps: {},\n        disabled: false,\n        format: \"YYYY-MM-DD\",\n        invalidDateMessage: \"Invalid date\",\n        maxDate: getDefaultMaxDate(),\n        minDate: getDefaultMinDate(),\n        openOnFocus: true,\n        outOfRangeMessage: \"Out of range\",\n        popoverPosition: Position.BOTTOM,\n    };\n\n    public static displayName = \"Blueprint.DateInput\";\n\n    private inputRef: HTMLElement = null;\n\n    public constructor(props?: IDateInputProps, context?: any) {\n        super(props, context);\n\n        const defaultValue = this.props.defaultValue ? fromDateToMoment(this.props.defaultValue) : moment(null);\n\n        this.state = {\n            isInputFocused: false,\n            isOpen: false,\n            value: this.props.value !== undefined ? fromDateToMoment(this.props.value) : defaultValue,\n            valueString: null,\n        };\n    }\n\n    public render() {\n        const { value, valueString } = this.state;\n        const dateString = this.state.isInputFocused ? valueString : this.getDateString(value);\n        const date = this.state.isInputFocused ? this.createMoment(valueString) : value;\n        const dateValue = this.isMomentValidAndInRange(value) ? fromMomentToDate(value) : null;\n\n        const popoverContent =\n            this.props.timePrecision === undefined ? (\n                <DatePicker {...this.props} onChange={this.handleDateChange} value={dateValue} />\n            ) : (\n                <DateTimePicker\n                    onChange={this.handleDateChange}\n                    value={dateValue}\n                    datePickerProps={this.props}\n                    timePickerProps={{ precision: this.props.timePrecision }}\n                />\n            );\n        // assign default empty object here to prevent mutation\n        const { inputProps = {}, popoverProps = {} } = this.props;\n        // exclude ref (comes from HTMLInputProps typings, not InputGroup)\n        const { ref, ...htmlInputProps } = inputProps;\n\n        const inputClasses = classNames(\n            {\n                \"pt-intent-danger\": !(this.isMomentValidAndInRange(date) || isMomentNull(date) || dateString === \"\"),\n            },\n            inputProps.className,\n        );\n\n        return (\n            <Popover\n                inline={true}\n                isOpen={this.state.isOpen && !this.props.disabled}\n                position={this.props.popoverPosition}\n                {...popoverProps}\n                autoFocus={false}\n                enforceFocus={false}\n                content={popoverContent}\n                onClose={this.handleClosePopover}\n                popoverClassName={classNames(\"pt-dateinput-popover\", popoverProps.popoverClassName)}\n            >\n                <InputGroup\n                    autoComplete=\"off\"\n                    placeholder={this.props.format}\n                    rightElement={this.props.rightElement}\n                    {...htmlInputProps}\n                    className={inputClasses}\n                    disabled={this.props.disabled}\n                    inputRef={this.setInputRef}\n                    type=\"text\"\n                    onBlur={this.handleInputBlur}\n                    onChange={this.handleInputChange}\n                    onClick={this.handleInputClick}\n                    onFocus={this.handleInputFocus}\n                    value={dateString}\n                />\n            </Popover>\n        );\n    }\n\n    public componentWillReceiveProps(nextProps: IDateInputProps) {\n        super.componentWillReceiveProps(nextProps);\n        if (nextProps.value !== this.props.value) {\n            this.setState({ value: fromDateToMoment(nextProps.value) });\n        }\n    }\n\n    public validateProps(props: IDateInputProps) {\n        if (props.popoverPosition !== DateInput.defaultProps.popoverPosition) {\n            console.warn(DATEINPUT_WARN_DEPRECATED_POPOVER_POSITION);\n        }\n        if (props.openOnFocus !== DateInput.defaultProps.openOnFocus) {\n            console.warn(DATEINPUT_WARN_DEPRECATED_OPEN_ON_FOCUS);\n        }\n    }\n\n    private createMoment(valueString: string) {\n        // Locale here used for parsing, does not set the locale on the moment itself\n        return moment(valueString, this.props.format, this.props.locale);\n    }\n\n    private getDateString = (value: moment.Moment) => {\n        if (isMomentNull(value)) {\n            return \"\";\n        }\n        if (value.isValid()) {\n            if (this.isMomentInRange(value)) {\n                return toLocalizedDateString(value, this.props.format, this.props.locale);\n            } else {\n                return this.props.outOfRangeMessage;\n            }\n        }\n        return this.props.invalidDateMessage;\n    };\n\n    private isMomentValidAndInRange(value: moment.Moment) {\n        return isMomentValidAndInRange(value, this.props.minDate, this.props.maxDate);\n    }\n\n    private isMomentInRange(value: moment.Moment) {\n        return isMomentInRange(value, this.props.minDate, this.props.maxDate);\n    }\n\n    private handleClosePopover = (e: React.SyntheticEvent<HTMLElement>) => {\n        const { popoverProps = {} } = this.props;\n        Utils.safeInvoke(popoverProps.onClose, e);\n        this.setState({ isOpen: false });\n    };\n\n    private handleDateChange = (date: Date, hasUserManuallySelectedDate: boolean) => {\n        const prevMomentDate = this.state.value;\n        const momentDate = fromDateToMoment(date);\n\n        // this change handler was triggered by a change in month, day, or (if enabled) time. for UX\n        // purposes, we want to close the popover only if the user explicitly clicked a day within\n        // the current month.\n        const isOpen =\n            !hasUserManuallySelectedDate ||\n            this.hasMonthChanged(prevMomentDate, momentDate) ||\n            this.hasTimeChanged(prevMomentDate, momentDate) ||\n            !this.props.closeOnSelection;\n\n        if (this.props.value === undefined) {\n            this.setState({ isInputFocused: false, isOpen, value: momentDate });\n        } else {\n            this.setState({ isInputFocused: false, isOpen });\n        }\n        Utils.safeInvoke(this.props.onChange, date === null ? null : fromMomentToDate(momentDate));\n    };\n\n    private shouldCheckForDateChanges(prevMomentDate: moment.Moment, nextMomentDate: moment.Moment) {\n        return nextMomentDate != null && !isMomentNull(prevMomentDate) && prevMomentDate.isValid();\n    }\n\n    private hasMonthChanged(prevMomentDate: moment.Moment, nextMomentDate: moment.Moment) {\n        return (\n            this.shouldCheckForDateChanges(prevMomentDate, nextMomentDate) &&\n            nextMomentDate.month() !== prevMomentDate.month()\n        );\n    }\n\n    private hasTimeChanged(prevMomentDate: moment.Moment, nextMomentDate: moment.Moment) {\n        return (\n            this.shouldCheckForDateChanges(prevMomentDate, nextMomentDate) &&\n            this.props.timePrecision != null &&\n            (nextMomentDate.hours() !== prevMomentDate.hours() ||\n                nextMomentDate.minutes() !== prevMomentDate.minutes() ||\n                nextMomentDate.seconds() !== prevMomentDate.seconds() ||\n                nextMomentDate.milliseconds() !== prevMomentDate.milliseconds())\n        );\n    }\n\n    private handleInputFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n        let valueString: string;\n        if (isMomentNull(this.state.value)) {\n            valueString = \"\";\n        } else {\n            valueString = toLocalizedDateString(this.state.value, this.props.format, this.props.locale);\n        }\n\n        if (this.props.openOnFocus) {\n            this.setState({ isInputFocused: true, isOpen: true, valueString });\n        } else {\n            this.setState({ isInputFocused: true, valueString });\n        }\n        this.safeInvokeInputProp(\"onFocus\", e);\n    };\n\n    private handleInputClick = (e: React.SyntheticEvent<HTMLInputElement>) => {\n        if (this.props.openOnFocus) {\n            e.stopPropagation();\n        }\n        this.safeInvokeInputProp(\"onClick\", e);\n    };\n\n    private handleInputChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n        const valueString = (e.target as HTMLInputElement).value;\n        const value = this.createMoment(valueString);\n\n        if (value.isValid() && this.isMomentInRange(value)) {\n            if (this.props.value === undefined) {\n                this.setState({ value, valueString });\n            } else {\n                this.setState({ valueString });\n            }\n            Utils.safeInvoke(this.props.onChange, fromMomentToDate(value));\n        } else {\n            if (valueString.length === 0) {\n                Utils.safeInvoke(this.props.onChange, null);\n            }\n            this.setState({ valueString });\n        }\n        this.safeInvokeInputProp(\"onChange\", e);\n    };\n\n    private handleInputBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n        const valueString = this.state.valueString;\n        const value = this.createMoment(valueString);\n        if (\n            valueString.length > 0 &&\n            valueString !== this.getDateString(this.state.value) &&\n            (!value.isValid() || !this.isMomentInRange(value))\n        ) {\n            if (this.props.value === undefined) {\n                this.setState({ isInputFocused: false, value, valueString: null });\n            } else {\n                this.setState({ isInputFocused: false });\n            }\n\n            if (!value.isValid()) {\n                Utils.safeInvoke(this.props.onError, new Date(undefined));\n            } else if (!this.isMomentInRange(value)) {\n                Utils.safeInvoke(this.props.onError, fromMomentToDate(value));\n            } else {\n                Utils.safeInvoke(this.props.onChange, fromMomentToDate(value));\n            }\n        } else {\n            if (valueString.length === 0) {\n                this.setState({ isInputFocused: false, value: moment(null), valueString: null });\n            } else {\n                this.setState({ isInputFocused: false });\n            }\n        }\n        this.safeInvokeInputProp(\"onBlur\", e);\n    };\n\n    private setInputRef = (el: HTMLElement) => {\n        this.inputRef = el;\n        const { inputProps = {} } = this.props;\n        Utils.safeInvoke(inputProps.inputRef, el);\n    };\n\n    /** safe wrapper around invoking input props event handler (prop defaults to undefined) */\n    private safeInvokeInputProp(name: keyof HTMLInputProps, e: React.SyntheticEvent<HTMLElement>) {\n        const { inputProps = {} } = this.props;\n        Utils.safeInvoke(inputProps[name], e);\n    }\n}\n"]}