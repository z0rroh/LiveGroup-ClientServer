{"version":3,"sources":["../src/common/errors.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;;AAEH,IAAM,EAAE,GAAG,aAAa,CAAC;AAEZ,QAAA,gCAAgC,GAAM,EAAE,0EAAuE,CAAC;AAChH,QAAA,gCAAgC,GAAM,EAAE,0EAAuE,CAAC;AAChH,QAAA,2BAA2B,GAAM,EAAE,sDAAmD,CAAC;AACvF,QAAA,wBAAwB,GAAM,EAAE,wEAAqE,CAAC;AAEtG,QAAA,qCAAqC,GAAG,wCAAgC,CAAC,OAAO,CACzF,YAAY,EACZ,iBAAiB,CACpB,CAAC;AACW,QAAA,qCAAqC,GAAG,wCAAgC,CAAC,OAAO,CACzF,YAAY,EACZ,iBAAiB,CACpB,CAAC;AACW,QAAA,gCAAgC,GAAG,mCAA2B,CAAC,OAAO,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAC;AACxG,QAAA,6BAA6B,GAAG,gCAAwB,CAAC,OAAO,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAC;AAClG,QAAA,oDAAoD,GAC7D,2FAA2F,CAAC;AAEnF,QAAA,0CAA0C,GAAM,EAAE,wFAAqF,CAAC;AACxI,QAAA,uCAAuC,GAAM,EAAE,iHAA8G,CAAC;AAE9J,QAAA,yBAAyB,GAC/B,EAAE,8FAA2F;IAChG,uGAAuG,CAAC","file":"errors.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nconst ns = \"[Blueprint]\";\n\nexport const DATEPICKER_DEFAULT_VALUE_INVALID = `${ns} <DatePicker> defaultValue must be within minDate and maxDate bounds.`;\nexport const DATEPICKER_INITIAL_MONTH_INVALID = `${ns} <DatePicker> initialMonth must be within minDate and maxDate bounds.`;\nexport const DATEPICKER_MAX_DATE_INVALID = `${ns} <DatePicker> maxDate must be later than minDate.`;\nexport const DATEPICKER_VALUE_INVALID = `${ns} <DatePicker> value prop must be within minDate and maxDate bounds.`;\n\nexport const DATERANGEPICKER_DEFAULT_VALUE_INVALID = DATEPICKER_DEFAULT_VALUE_INVALID.replace(\n    \"DatePicker\",\n    \"DateRangePicker\",\n);\nexport const DATERANGEPICKER_INITIAL_MONTH_INVALID = DATEPICKER_INITIAL_MONTH_INVALID.replace(\n    \"DatePicker\",\n    \"DateRangePicker\",\n);\nexport const DATERANGEPICKER_MAX_DATE_INVALID = DATEPICKER_MAX_DATE_INVALID.replace(\"DatePicker\", \"DateRangePicker\");\nexport const DATERANGEPICKER_VALUE_INVALID = DATEPICKER_VALUE_INVALID.replace(\"DatePicker\", \"DateRangePicker\");\nexport const DATERANGEPICKER_PREFERRED_BOUNDARY_TO_MODIFY_INVALID =\n    \"<DateRangePicker> preferredBoundaryToModify must be a valid DateRangeBoundary if defined.\";\n\nexport const DATEINPUT_WARN_DEPRECATED_POPOVER_POSITION = `${ns} DEPRECATION: <DateInput> popoverPosition is deprecated. Use popoverProps.position.`;\nexport const DATEINPUT_WARN_DEPRECATED_OPEN_ON_FOCUS = `${ns} DEPRECATION: <DateInput> openOnFocus is deprecated. This feature will be removed in the next major version.`;\n\nexport const DATERANGEINPUT_NULL_VALUE =\n    `${ns} <DateRangeInput> value cannot be null. Pass undefined to clear the value and operate in ` +\n    \"uncontrolled mode, or pass [null, null] to clear the value and continue operating in controlled mode.\";\n"]}