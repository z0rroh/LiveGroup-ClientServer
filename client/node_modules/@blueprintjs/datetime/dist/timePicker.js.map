{"version":3,"sources":["../src/timePicker.tsx"],"names":[],"mappings":"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","file":"timePicker.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport { Classes as CoreClasses, IProps, Keys, Utils as BlueprintUtils } from \"@blueprintjs/core\";\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport * as Classes from \"./common/classes\";\nimport * as DateUtils from \"./common/dateUtils\";\nimport * as Utils from \"./common/utils\";\n\nexport enum TimePickerPrecision {\n    MINUTE,\n    SECOND,\n    MILLISECOND,\n}\n\nexport interface ITimePickerProps extends IProps {\n    /**\n     * Initial time the `TimePicker` will display.\n     * This should not be set if `value` is set.\n     */\n    defaultValue?: Date;\n\n    /**\n     * Whether the time picker is non-interactive.\n     * @default false\n     */\n    disabled?: boolean;\n\n    /**\n     * Callback invoked when the user changes the time.\n     */\n    onChange?: (newTime: Date) => void;\n\n    /**\n     * The precision of time the user can set.\n     * @default TimePickerPrecision.MINUTE\n     */\n    precision?: TimePickerPrecision;\n\n    /**\n     * Whether all the text in each input should be selected on focus.\n     * @default false\n     */\n    selectAllOnFocus?: boolean;\n\n    /**\n     * Whether to show arrows buttons for changing the time.\n     * @default false\n     */\n    showArrowButtons?: boolean;\n\n    /**\n     * The latest time the user can select. The year, month, and day parts of the `Date` object are ignored.\n     * While the `maxTime` will be later than the `minTime` in the basic case,\n     * it is also allowed to be earlier than the `minTime`.\n     * This is useful, for example, to express a time range that extends before and after midnight.\n     * If the `maxTime` and `minTime` are equal, then the valid time range is constrained to only that one value.\n     */\n    maxTime?: Date;\n\n    /**\n     * The earliest time the user can select. The year, month, and day parts of the `Date` object are ignored.\n     * While the `minTime` will be earlier than the `maxTime` in the basic case,\n     * it is also allowed to be later than the `maxTime`.\n     * This is useful, for example, to express a time range that extends before and after midnight.\n     * If the `maxTime` and `minTime` are equal, then the valid time range is constrained to only that one value.\n     */\n    minTime?: Date;\n\n    /**\n     * The currently set time.\n     * If this prop is provided, the component acts in a controlled manner.\n     */\n    value?: Date;\n}\n\nexport interface ITimePickerState {\n    hourText?: string;\n    minuteText?: string;\n    secondText?: string;\n    millisecondText?: string;\n    value?: Date;\n}\n\nconst DEFAULT_MIN_HOUR = 0;\nconst DEFAULT_MIN_MINUTE = 0;\nconst DEFAULT_MIN_SECOND = 0;\nconst DEFAULT_MIN_MILLISECOND = 0;\n\nconst DEFAULT_MAX_HOUR = 23;\nconst DEFAULT_MAX_MINUTE = 59;\nconst DEFAULT_MAX_SECOND = 59;\nconst DEFAULT_MAX_MILLISECOND = 999;\n\nexport function getDefaultMinTime(): Date {\n    return new Date(0, 0, 0, DEFAULT_MIN_HOUR, DEFAULT_MIN_MINUTE, DEFAULT_MIN_SECOND, DEFAULT_MIN_MILLISECOND);\n}\n\nexport function getDefaultMaxTime(): Date {\n    return new Date(0, 0, 0, DEFAULT_MAX_HOUR, DEFAULT_MAX_MINUTE, DEFAULT_MAX_SECOND, DEFAULT_MAX_MILLISECOND);\n}\n\nexport class TimePicker extends React.Component<ITimePickerProps, ITimePickerState> {\n    public static defaultProps: ITimePickerProps = {\n        disabled: false,\n        maxTime: getDefaultMaxTime(),\n        minTime: getDefaultMinTime(),\n        precision: TimePickerPrecision.MINUTE,\n        selectAllOnFocus: false,\n        showArrowButtons: false,\n    };\n\n    public static displayName = \"Blueprint.TimePicker\";\n\n    public constructor(props?: ITimePickerProps, context?: any) {\n        super(props, context);\n\n        if (props.value != null) {\n            this.state = this.getFullStateFromValue(props.value);\n        } else if (props.defaultValue != null) {\n            this.state = this.getFullStateFromValue(props.defaultValue);\n        } else {\n            this.state = this.getFullStateFromValue(props.minTime);\n        }\n    }\n\n    public render() {\n        const shouldRenderSeconds = this.props.precision >= TimePickerPrecision.SECOND;\n        const shouldRenderMilliseconds = this.props.precision >= TimePickerPrecision.MILLISECOND;\n        const classes = classNames(Classes.TIMEPICKER, this.props.className, {\n            [CoreClasses.DISABLED]: this.props.disabled,\n        });\n\n        /* tslint:disable:max-line-length */\n        return (\n            <div className={classes}>\n                <div className={Classes.TIMEPICKER_ARROW_ROW}>\n                    {this.maybeRenderArrowButton(true, Classes.TIMEPICKER_HOUR, () =>\n                        this.incrementTime(TimeUnit.HOUR),\n                    )}\n                    {this.maybeRenderArrowButton(true, Classes.TIMEPICKER_MINUTE, () =>\n                        this.incrementTime(TimeUnit.MINUTE),\n                    )}\n                    {shouldRenderSeconds\n                        ? this.maybeRenderArrowButton(true, Classes.TIMEPICKER_SECOND, () =>\n                              this.incrementTime(TimeUnit.SECOND),\n                          )\n                        : null}\n                    {shouldRenderMilliseconds\n                        ? this.maybeRenderArrowButton(true, Classes.TIMEPICKER_MILLISECOND, () =>\n                              this.incrementTime(TimeUnit.MS),\n                          )\n                        : null}\n                </div>\n                <div className={Classes.TIMEPICKER_INPUT_ROW}>\n                    {this.renderInput(Classes.TIMEPICKER_HOUR, TimeUnit.HOUR, this.state.hourText)}\n                    {this.renderDivider()}\n                    {this.renderInput(Classes.TIMEPICKER_MINUTE, TimeUnit.MINUTE, this.state.minuteText)}\n                    {shouldRenderSeconds ? this.renderDivider() : null}\n                    {shouldRenderSeconds\n                        ? this.renderInput(Classes.TIMEPICKER_SECOND, TimeUnit.SECOND, this.state.secondText)\n                        : null}\n                    {shouldRenderMilliseconds ? this.renderDivider(\".\") : null}\n                    {shouldRenderMilliseconds\n                        ? this.renderInput(Classes.TIMEPICKER_MILLISECOND, TimeUnit.MS, this.state.millisecondText)\n                        : null}\n                </div>\n                <div className={Classes.TIMEPICKER_ARROW_ROW}>\n                    {this.maybeRenderArrowButton(false, Classes.TIMEPICKER_HOUR, () =>\n                        this.decrementTime(TimeUnit.HOUR),\n                    )}\n                    {this.maybeRenderArrowButton(false, Classes.TIMEPICKER_MINUTE, () =>\n                        this.decrementTime(TimeUnit.MINUTE),\n                    )}\n                    {shouldRenderSeconds\n                        ? this.maybeRenderArrowButton(false, Classes.TIMEPICKER_SECOND, () =>\n                              this.decrementTime(TimeUnit.SECOND),\n                          )\n                        : null}\n                    {shouldRenderMilliseconds\n                        ? this.maybeRenderArrowButton(false, Classes.TIMEPICKER_MILLISECOND, () =>\n                              this.decrementTime(TimeUnit.MS),\n                          )\n                        : null}\n                </div>\n            </div>\n        );\n        /* tslint:enable:max-line-length */\n    }\n\n    public componentWillReceiveProps(nextProps: ITimePickerProps) {\n        const didMinTimeChange = nextProps.minTime !== this.props.minTime;\n        const didMaxTimeChange = nextProps.maxTime !== this.props.maxTime;\n        const didBoundsChange = didMinTimeChange || didMaxTimeChange;\n\n        if (didBoundsChange) {\n            const timeInRange = DateUtils.getTimeInRange(this.state.value, nextProps.minTime, nextProps.maxTime);\n            this.setState(this.getFullStateFromValue(timeInRange));\n        }\n\n        if (nextProps.value != null && !DateUtils.areSameTime(nextProps.value, this.props.value)) {\n            this.setState(this.getFullStateFromValue(nextProps.value));\n        }\n    }\n\n    // begin method definitions: rendering\n\n    private maybeRenderArrowButton(\n        isDirectionUp: boolean,\n        className: string,\n        onClick: React.MouseEventHandler<HTMLSpanElement>,\n    ) {\n        const classes = classNames(Classes.TIMEPICKER_ARROW_BUTTON, className, \"pt-icon-standard\", {\n            \"pt-icon-chevron-down\": !isDirectionUp,\n            \"pt-icon-chevron-up\": isDirectionUp,\n        });\n        return this.props.showArrowButtons ? <span className={classes} onClick={onClick} /> : null;\n    }\n\n    private renderDivider(text = \":\") {\n        return <span className={Classes.TIMEPICKER_DIVIDER_TEXT}>{text}</span>;\n    }\n\n    private renderInput(className: string, unit: TimeUnit, value: string) {\n        return (\n            <input\n                className={classNames(Classes.TIMEPICKER_INPUT, className)}\n                onBlur={this.getInputBlurHandler(unit)}\n                onChange={this.getInputChangeHandler(unit)}\n                onFocus={this.handleFocus}\n                onKeyDown={this.getInputKeyDownHandler(unit)}\n                value={value}\n                disabled={this.props.disabled}\n            />\n        );\n    }\n\n    // begin method definitions: event handlers\n\n    private getInputBlurHandler = (unit: TimeUnit) => (e: React.SyntheticEvent<HTMLInputElement>) => {\n        const text = getStringValueFromInputEvent(e);\n        this.updateTime(parseInt(text, 10), unit);\n    };\n\n    private getInputChangeHandler = (unit: TimeUnit) => (e: React.SyntheticEvent<HTMLInputElement>) => {\n        const TWO_DIGITS = /^\\d{0,2}$/;\n        const THREE_DIGITS = /^\\d{0,3}$/;\n        const text = getStringValueFromInputEvent(e);\n\n        let isValid = false;\n        switch (unit) {\n            case TimeUnit.HOUR:\n            case TimeUnit.MINUTE:\n            case TimeUnit.SECOND:\n                isValid = TWO_DIGITS.test(text);\n                break;\n            case TimeUnit.MS:\n                isValid = THREE_DIGITS.test(text);\n                break;\n            default:\n                throw Error(\"Invalid TimeUnit\");\n        }\n\n        if (isValid) {\n            switch (unit) {\n                case TimeUnit.HOUR:\n                    this.updateState({ hourText: text });\n                    break;\n                case TimeUnit.MINUTE:\n                    this.updateState({ minuteText: text });\n                    break;\n                case TimeUnit.SECOND:\n                    this.updateState({ secondText: text });\n                    break;\n                case TimeUnit.MS:\n                    this.updateState({ millisecondText: text });\n                    break;\n                default:\n                    throw Error(\"Invalid TimeUnit\");\n            }\n        }\n    };\n\n    private getInputKeyDownHandler = (unit: TimeUnit) => (e: React.KeyboardEvent<HTMLInputElement>) => {\n        handleKeyEvent(e, {\n            [Keys.ARROW_UP]: () => this.incrementTime(unit),\n            [Keys.ARROW_DOWN]: () => this.decrementTime(unit),\n            [Keys.ENTER]: () => {\n                (e.currentTarget as HTMLInputElement).blur();\n            },\n        });\n    };\n\n    private handleFocus = (e: React.SyntheticEvent<HTMLInputElement>) => {\n        if (this.props.selectAllOnFocus) {\n            e.currentTarget.select();\n        }\n    };\n\n    // begin method definitions: state modification\n\n    /**\n     * Generates a full ITimePickerState object with all text fields set to formatted strings based on value\n     */\n    private getFullStateFromValue(value: Date): ITimePickerState {\n        const timeInRange = DateUtils.getTimeInRange(value, this.props.minTime, this.props.maxTime);\n        /* tslint:disable:object-literal-sort-keys */\n        return {\n            hourText: formatTime(timeInRange.getHours(), TimeUnit.HOUR),\n            minuteText: formatTime(timeInRange.getMinutes(), TimeUnit.MINUTE),\n            secondText: formatTime(timeInRange.getSeconds(), TimeUnit.SECOND),\n            millisecondText: formatTime(timeInRange.getMilliseconds(), TimeUnit.MS),\n            value: timeInRange,\n        };\n        /* tslint:enable:object-literal-sort-keys */\n    }\n\n    private incrementTime(unit: TimeUnit) {\n        if (this.props.disabled) {\n            return;\n        }\n        const newTime = getTimeUnit(this.state.value, unit) + 1;\n        this.updateTime(loopTime(newTime, unit), unit);\n    }\n\n    private decrementTime(unit: TimeUnit) {\n        if (this.props.disabled) {\n            return;\n        }\n        const newTime = getTimeUnit(this.state.value, unit) - 1;\n        this.updateTime(loopTime(newTime, unit), unit);\n    }\n\n    private updateTime(time: number, unit: TimeUnit) {\n        const newValue = DateUtils.clone(this.state.value);\n\n        if (isTimeValid(time, unit)) {\n            setTimeUnit(time, newValue, unit);\n            if (DateUtils.isTimeInRange(newValue, this.props.minTime, this.props.maxTime)) {\n                this.updateState({ value: newValue });\n            } else if (!DateUtils.areSameTime(this.state.value, this.props.minTime)) {\n                this.updateState(this.getFullStateFromValue(newValue));\n            }\n        } else {\n            // reset to last known good state\n            this.updateState(this.getFullStateFromValue(this.state.value));\n        }\n    }\n\n    private updateState(state: ITimePickerState) {\n        let newState = state;\n        const hasNewValue = newState.value != null && !DateUtils.areSameTime(newState.value, this.state.value);\n\n        if (this.props.value == null) {\n            // component is uncontrolled\n            if (hasNewValue) {\n                newState = this.getFullStateFromValue(newState.value);\n            }\n            this.setState(newState);\n        } else {\n            // component is controlled, and there's a new value\n            // so set inputs' text based off of _old_ value and later fire onChange with new value\n            if (hasNewValue) {\n                this.setState(this.getFullStateFromValue(this.state.value));\n            } else {\n                // no new value, this means only text has changed (from user typing)\n                // we want inputs to change, so update state with new text for the inputs\n                // but don't change actual value\n                this.setState({ ...newState, value: DateUtils.clone(this.state.value) });\n            }\n        }\n\n        if (hasNewValue) {\n            BlueprintUtils.safeInvoke(this.props.onChange, newState.value);\n        }\n    }\n}\n\nenum TimeUnit {\n    HOUR,\n    MINUTE,\n    SECOND,\n    MS,\n}\n\nfunction formatTime(time: number, unit: TimeUnit) {\n    switch (unit) {\n        case TimeUnit.HOUR:\n            return time.toString();\n        case TimeUnit.MINUTE:\n        case TimeUnit.SECOND:\n            return Utils.padWithZeroes(time.toString(), 2);\n        case TimeUnit.MS:\n            return Utils.padWithZeroes(time.toString(), 3);\n        default:\n            throw Error(\"Invalid TimeUnit\");\n    }\n}\n\nfunction getStringValueFromInputEvent(e: React.SyntheticEvent<HTMLInputElement>) {\n    return (e.currentTarget as HTMLInputElement).value;\n}\n\nfunction getTimeUnit(date: Date, unit: TimeUnit) {\n    switch (unit) {\n        case TimeUnit.HOUR:\n            return date.getHours();\n        case TimeUnit.MINUTE:\n            return date.getMinutes();\n        case TimeUnit.SECOND:\n            return date.getSeconds();\n        case TimeUnit.MS:\n            return date.getMilliseconds();\n        default:\n            throw Error(\"Invalid TimeUnit\");\n    }\n}\n\ninterface IKeyEventMap {\n    [key: number]: () => void;\n}\n\nfunction handleKeyEvent(e: React.KeyboardEvent<HTMLInputElement>, actions: IKeyEventMap, preventDefault = true) {\n    for (const k of Object.keys(actions)) {\n        const key = Number(k);\n        if (e.which === key) {\n            if (preventDefault) {\n                e.preventDefault();\n            }\n            actions[key]();\n        }\n    }\n}\n\nfunction isTimeValid(time: number, unit: TimeUnit) {\n    return time != null && !isNaN(time) && minTime(unit) <= time && time <= maxTime(unit);\n}\n\nfunction loopTime(time: number, unit: TimeUnit) {\n    const max = maxTime(unit);\n    const min = minTime(unit);\n\n    if (time > max) {\n        return min;\n    } else if (time < min) {\n        return max;\n    }\n    return time;\n}\n\nfunction minTime(unit: TimeUnit) {\n    const min: { [unit: number]: number } = {\n        [TimeUnit.HOUR]: DEFAULT_MIN_HOUR,\n        [TimeUnit.MINUTE]: DEFAULT_MIN_MINUTE,\n        [TimeUnit.SECOND]: DEFAULT_MIN_SECOND,\n        [TimeUnit.MS]: DEFAULT_MIN_MILLISECOND,\n    };\n    return min[unit];\n}\n\nfunction maxTime(unit: TimeUnit) {\n    const max: { [unit: number]: number } = {\n        [TimeUnit.HOUR]: DEFAULT_MAX_HOUR,\n        [TimeUnit.MINUTE]: DEFAULT_MAX_MINUTE,\n        [TimeUnit.SECOND]: DEFAULT_MAX_SECOND,\n        [TimeUnit.MS]: DEFAULT_MAX_MILLISECOND,\n    };\n    return max[unit];\n}\n\nfunction setTimeUnit(time: number, date: Date, unit: TimeUnit) {\n    switch (unit) {\n        case TimeUnit.HOUR:\n            date.setHours(time);\n            break;\n        case TimeUnit.MINUTE:\n            date.setMinutes(time);\n            break;\n        case TimeUnit.SECOND:\n            date.setSeconds(time);\n            break;\n        case TimeUnit.MS:\n            date.setMilliseconds(time);\n            break;\n        default:\n            throw Error(\"Invalid TimeUnit\");\n    }\n}\n\nexport const TimePickerFactory = React.createFactory(TimePicker);\n"]}