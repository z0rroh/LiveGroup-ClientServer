{"version":3,"sources":["../src/dateRangePicker.tsx"],"names":[],"mappings":"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","file":"dateRangePicker.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport { AbstractComponent, Classes, IProps, Menu, MenuItem, Utils } from \"@blueprintjs/core\";\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDayPicker from \"react-day-picker\";\n\nimport * as DateClasses from \"./common/classes\";\nimport * as DateUtils from \"./common/dateUtils\";\nimport DateRange = DateUtils.DateRange;\nimport DateRangeBoundary = DateUtils.DateRangeBoundary;\n\nimport * as Errors from \"./common/errors\";\nimport { MonthAndYear } from \"./common/monthAndYear\";\n\nimport { DatePickerCaption } from \"./datePickerCaption\";\nimport {\n    combineModifiers,\n    getDefaultMaxDate,\n    getDefaultMinDate,\n    HOVERED_RANGE_MODIFIER,\n    IDatePickerBaseProps,\n    IDatePickerModifiers,\n    SELECTED_RANGE_MODIFIER,\n} from \"./datePickerCore\";\nimport { DateRangeSelectionStrategy } from \"./dateRangeSelectionStrategy\";\n\nexport interface IDateRangeShortcut {\n    label: string;\n    dateRange: DateRange;\n}\n\nexport interface IDateRangePickerProps extends IDatePickerBaseProps, IProps {\n    /**\n     * Whether the start and end dates of the range can be the same day.\n     * If `true`, clicking a selected date will create a one-day range.\n     * If `false`, clicking a selected date will clear the selection.\n     * @default false\n     */\n    allowSingleDayRange?: boolean;\n\n    /**\n     * The date-range boundary that the next click should modify.\n     * This will be honored unless the next click would overlap the other boundary date.\n     * In that case, the two boundary dates will be auto-swapped to keep them in chronological order.\n     * If `undefined`, the picker will revert to its default selection behavior.\n     */\n    boundaryToModify?: DateRangeBoundary;\n\n    /**\n     * Whether displayed months in the calendar are contiguous.\n     * If false, each side of the calendar can move independently to non-contiguous months.\n     * @default true\n     */\n    contiguousCalendarMonths?: boolean;\n    /**\n     * Props to pass to ReactDayPicker. See API documentation\n     * [here](http://react-day-picker.js.org/docs/api-daypicker.html).\n     *\n     * The following props are managed by the component and cannot be configured:\n     * `canChangeMonth`, `captionElement`, `numberOfMonths`, `fromMonth` (use\n     * `minDate`), `month` (use `initialMonth`), `toMonth` (use `maxDate`).\n     */\n    dayPickerProps?: ReactDayPicker.Props;\n\n    /**\n     * Initial `DateRange` the calendar will display as selected.\n     * This should not be set if `value` is set.\n     */\n    defaultValue?: DateRange;\n\n    /**\n     * Called when the user selects a day.\n     * If no days are selected, it will pass `[null, null]`.\n     * If a start date is selected but not an end date, it will pass `[selectedDate, null]`.\n     * If both a start and end date are selected, it will pass `[startDate, endDate]`.\n     */\n    onChange?: (selectedDates: DateRange) => void;\n\n    /**\n     * Called when the user changes the hovered date range, either from mouseenter or mouseleave.\n     * When triggered from mouseenter, it will pass the date range that would result from next click.\n     * When triggered from mouseleave, it will pass `undefined`.\n     */\n    onHoverChange?: (hoveredDates: DateRange, hoveredDay: Date, hoveredBoundary: DateRangeBoundary) => void;\n\n    /**\n     * Whether shortcuts to quickly select a range of dates are displayed or not.\n     * If `true`, preset shortcuts will be displayed.\n     * If `false`, no shortcuts will be displayed.\n     * If an array is provided, the custom shortcuts will be displayed.\n     * @default true\n     */\n    shortcuts?: boolean | IDateRangeShortcut[];\n\n    /**\n     * The currently selected `DateRange`.\n     * If this prop is provided, the component acts in a controlled manner.\n     */\n    value?: DateRange;\n}\n\n// leftView and rightView controls the DayPicker displayed month\nexport interface IDateRangePickerState {\n    hoverValue?: DateRange;\n    leftView?: MonthAndYear;\n    rightView?: MonthAndYear;\n    value?: DateRange;\n}\n\nexport class DateRangePicker extends AbstractComponent<IDateRangePickerProps, IDateRangePickerState> {\n    public static defaultProps: IDateRangePickerProps = {\n        allowSingleDayRange: false,\n        contiguousCalendarMonths: true,\n        dayPickerProps: {},\n        maxDate: getDefaultMaxDate(),\n        minDate: getDefaultMinDate(),\n        shortcuts: true,\n    };\n\n    public static displayName = \"Blueprint.DateRangePicker\";\n\n    private get isControlled() {\n        return this.props.value != null;\n    }\n\n    // these will get merged with the user's own\n    private modifiers: IDatePickerModifiers = {\n        [SELECTED_RANGE_MODIFIER]: day => {\n            const { value } = this.state;\n            return value[0] != null && value[1] != null && DateUtils.isDayInRange(day, value, true);\n        },\n        [`${SELECTED_RANGE_MODIFIER}-start`]: day => DateUtils.areSameDay(this.state.value[0], day),\n        [`${SELECTED_RANGE_MODIFIER}-end`]: day => DateUtils.areSameDay(this.state.value[1], day),\n\n        [HOVERED_RANGE_MODIFIER]: (day: Date) => {\n            const { hoverValue, value } = this.state;\n            const [selectedStart, selectedEnd] = value;\n            if (selectedStart == null && selectedEnd == null) {\n                return false;\n            }\n            if (hoverValue == null || hoverValue[0] == null || hoverValue[1] == null) {\n                return false;\n            }\n            return DateUtils.isDayInRange(day, hoverValue, true);\n        },\n        [`${HOVERED_RANGE_MODIFIER}-start`]: (day: Date) => {\n            const { hoverValue } = this.state;\n            if (hoverValue == null || hoverValue[0] == null) {\n                return false;\n            }\n            return DateUtils.areSameDay(hoverValue[0], day);\n        },\n        [`${HOVERED_RANGE_MODIFIER}-end`]: (day: Date) => {\n            const { hoverValue } = this.state;\n            if (hoverValue == null || hoverValue[1] == null) {\n                return false;\n            }\n            return DateUtils.areSameDay(hoverValue[1], day);\n        },\n    };\n\n    public constructor(props?: IDateRangePickerProps, context?: any) {\n        super(props, context);\n\n        let value: DateRange = [null, null];\n        if (props.value != null) {\n            value = props.value;\n        } else if (props.defaultValue != null) {\n            value = props.defaultValue;\n        }\n\n        let initialMonth: Date;\n        const today = new Date();\n\n        if (props.initialMonth != null) {\n            initialMonth = props.initialMonth;\n        } else if (value[0] != null) {\n            initialMonth = DateUtils.clone(value[0]);\n        } else if (DateUtils.isDayInRange(today, [props.minDate, props.maxDate])) {\n            initialMonth = today;\n        } else {\n            initialMonth = DateUtils.getDateBetween([props.minDate, props.maxDate]);\n        }\n\n        /*\n        * if the initial month is the last month of the picker's\n        * allowable range, the react-day-picker library will show\n        * the max month on the left and the *min* month on the right.\n        * subtracting one avoids that weird, wraparound state (#289).\n        */\n        const initialMonthEqualsMinMonth = DateUtils.areSameMonth(initialMonth, props.minDate);\n        const initalMonthEqualsMaxMonth = DateUtils.areSameMonth(initialMonth, props.maxDate);\n        if (!initialMonthEqualsMinMonth && initalMonthEqualsMaxMonth) {\n            initialMonth.setMonth(initialMonth.getMonth() - 1);\n        }\n\n        const leftView = new MonthAndYear(initialMonth.getMonth(), initialMonth.getFullYear());\n        const rightView = leftView.getNextMonth();\n        this.state = { leftView, rightView, value, hoverValue: [null, null] };\n    }\n\n    public render() {\n        const modifiers = combineModifiers(this.modifiers, this.props.modifiers);\n        const {\n            className,\n            contiguousCalendarMonths,\n            dayPickerProps,\n            locale,\n            localeUtils,\n            maxDate,\n            minDate,\n        } = this.props;\n        const isShowingOneMonth = DateUtils.areSameMonth(this.props.minDate, this.props.maxDate);\n\n        const { leftView, rightView } = this.state;\n        const disabledDays = this.getDisabledDaysModifier();\n\n        const dayPickerBaseProps: ReactDayPicker.Props = {\n            enableOutsideDays: true,\n            locale,\n            localeUtils,\n            modifiers,\n            ...dayPickerProps,\n            disabledDays,\n            onDayClick: this.handleDayClick,\n            onDayMouseEnter: this.handleDayMouseEnter,\n            onDayMouseLeave: this.handleDayMouseLeave,\n            selectedDays: this.state.value,\n        };\n\n        if (contiguousCalendarMonths || isShowingOneMonth) {\n            const classes = classNames(DateClasses.DATEPICKER, DateClasses.DATERANGEPICKER, className, {\n                [DateClasses.DATERANGEPICKER_CONTIGUOUS]: contiguousCalendarMonths,\n                [DateClasses.DATERANGEPICKER_SINGLE_MONTH]: isShowingOneMonth,\n            });\n            // use the left DayPicker when we only need one\n            return (\n                <div className={classes}>\n                    {this.maybeRenderShortcuts()}\n                    <ReactDayPicker\n                        {...dayPickerBaseProps}\n                        captionElement={this.renderSingleCaption}\n                        fromMonth={minDate}\n                        month={leftView.getFullDate()}\n                        numberOfMonths={isShowingOneMonth ? 1 : 2}\n                        onMonthChange={this.handleLeftMonthChange}\n                        toMonth={maxDate}\n                    />\n                </div>\n            );\n        } else {\n            return (\n                <div className={classNames(DateClasses.DATEPICKER, DateClasses.DATERANGEPICKER, className)}>\n                    {this.maybeRenderShortcuts()}\n                    <ReactDayPicker\n                        {...dayPickerBaseProps}\n                        canChangeMonth={true}\n                        captionElement={this.renderLeftCaption}\n                        fromMonth={minDate}\n                        month={leftView.getFullDate()}\n                        onMonthChange={this.handleLeftMonthChange}\n                        toMonth={DateUtils.getDatePreviousMonth(maxDate)}\n                    />\n                    <ReactDayPicker\n                        {...dayPickerBaseProps}\n                        canChangeMonth={true}\n                        captionElement={this.renderRightCaption}\n                        fromMonth={DateUtils.getDateNextMonth(minDate)}\n                        month={rightView.getFullDate()}\n                        onMonthChange={this.handleRightMonthChange}\n                        toMonth={maxDate}\n                    />\n                </div>\n            );\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: IDateRangePickerProps) {\n        super.componentWillReceiveProps(nextProps);\n\n        if (!DateUtils.areRangesEqual(this.props.value, nextProps.value)) {\n            const nextState = getStateChange(\n                this.props.value,\n                nextProps.value,\n                this.state,\n                nextProps.contiguousCalendarMonths,\n            );\n            this.setState(nextState);\n        }\n    }\n\n    protected validateProps(props: IDateRangePickerProps) {\n        const { defaultValue, initialMonth, maxDate, minDate, boundaryToModify, value } = props;\n        const dateRange: DateRange = [minDate, maxDate];\n\n        if (defaultValue != null && !DateUtils.isDayRangeInRange(defaultValue, dateRange)) {\n            throw new Error(Errors.DATERANGEPICKER_DEFAULT_VALUE_INVALID);\n        }\n\n        if (initialMonth != null && !DateUtils.isMonthInRange(initialMonth, dateRange)) {\n            throw new Error(Errors.DATERANGEPICKER_INITIAL_MONTH_INVALID);\n        }\n\n        if (maxDate != null && minDate != null && maxDate < minDate && !DateUtils.areSameDay(maxDate, minDate)) {\n            throw new Error(Errors.DATERANGEPICKER_MAX_DATE_INVALID);\n        }\n\n        if (value != null && !DateUtils.isDayRangeInRange(value, dateRange)) {\n            throw new Error(Errors.DATERANGEPICKER_VALUE_INVALID);\n        }\n\n        if (\n            boundaryToModify != null &&\n            boundaryToModify !== DateRangeBoundary.START &&\n            boundaryToModify !== DateRangeBoundary.END\n        ) {\n            throw new Error(Errors.DATERANGEPICKER_PREFERRED_BOUNDARY_TO_MODIFY_INVALID);\n        }\n    }\n\n    private disabledDays = (day: Date) => !DateUtils.isDayInRange(day, [this.props.minDate, this.props.maxDate]);\n\n    private getDisabledDaysModifier = () => {\n        const { dayPickerProps: { disabledDays } } = this.props;\n\n        return disabledDays instanceof Array ? [this.disabledDays, ...disabledDays] : [this.disabledDays, disabledDays];\n    };\n\n    private maybeRenderShortcuts() {\n        const propsShortcuts = this.props.shortcuts;\n        if (propsShortcuts == null || propsShortcuts === false) {\n            return undefined;\n        }\n\n        const shortcuts = typeof propsShortcuts === \"boolean\" ? createDefaultShortcuts() : propsShortcuts;\n        const shortcutElements = shortcuts.map((s, i) => {\n            return (\n                <MenuItem\n                    className={Classes.POPOVER_DISMISS_OVERRIDE}\n                    disabled={!this.isShortcutInRange(s.dateRange)}\n                    key={i}\n                    onClick={this.getShorcutClickHandler(s.dateRange)}\n                    text={s.label}\n                />\n            );\n        });\n\n        return <Menu className={DateClasses.DATERANGEPICKER_SHORTCUTS}>{shortcutElements}</Menu>;\n    }\n\n    private renderSingleCaption = (captionProps: ReactDayPicker.CaptionElementProps) => (\n        <DatePickerCaption\n            {...captionProps}\n            maxDate={this.props.maxDate}\n            minDate={this.props.minDate}\n            onMonthChange={this.handleLeftMonthSelectChange}\n            onYearChange={this.handleLeftYearSelectChange}\n        />\n    );\n\n    private renderLeftCaption = (captionProps: ReactDayPicker.CaptionElementProps) => (\n        <DatePickerCaption\n            {...captionProps}\n            maxDate={DateUtils.getDatePreviousMonth(this.props.maxDate)}\n            minDate={this.props.minDate}\n            onMonthChange={this.handleLeftMonthSelectChange}\n            onYearChange={this.handleLeftYearSelectChange}\n        />\n    );\n\n    private renderRightCaption = (captionProps: ReactDayPicker.CaptionElementProps) => (\n        <DatePickerCaption\n            {...captionProps}\n            maxDate={this.props.maxDate}\n            minDate={DateUtils.getDateNextMonth(this.props.minDate)}\n            onMonthChange={this.handleRightMonthSelectChange}\n            onYearChange={this.handleRightYearSelectChange}\n        />\n    );\n\n    private handleDayMouseEnter = (\n        day: Date,\n        modifiers: ReactDayPicker.DayModifiers,\n        e: React.MouseEvent<HTMLDivElement>,\n    ) => {\n        Utils.safeInvoke(this.props.dayPickerProps.onDayMouseEnter, day, modifiers, e);\n\n        if (modifiers.disabled) {\n            return;\n        }\n        const { dateRange, boundary } = DateRangeSelectionStrategy.getNextState(\n            this.state.value,\n            day,\n            this.props.allowSingleDayRange,\n            this.props.boundaryToModify,\n        );\n        this.setState({ hoverValue: dateRange });\n        Utils.safeInvoke(this.props.onHoverChange, dateRange, day, boundary);\n    };\n\n    private handleDayMouseLeave = (\n        day: Date,\n        modifiers: ReactDayPicker.DayModifiers,\n        e: React.MouseEvent<HTMLDivElement>,\n    ) => {\n        Utils.safeInvoke(this.props.dayPickerProps.onDayMouseLeave, day, modifiers, e);\n        if (modifiers.disabled) {\n            return;\n        }\n        this.setState({ hoverValue: undefined });\n        Utils.safeInvoke(this.props.onHoverChange, undefined, day, undefined);\n    };\n\n    private handleDayClick = (\n        day: Date,\n        modifiers: ReactDayPicker.DayModifiers,\n        e: React.MouseEvent<HTMLDivElement>,\n    ) => {\n        Utils.safeInvoke(this.props.dayPickerProps.onDayClick, day, modifiers, e);\n\n        if (modifiers.disabled) {\n            // rerender base component to get around bug where you can navigate past bounds by clicking days\n            this.forceUpdate();\n            return;\n        }\n\n        const nextValue = DateRangeSelectionStrategy.getNextState(\n            this.state.value,\n            day,\n            this.props.allowSingleDayRange,\n            this.props.boundaryToModify,\n        ).dateRange;\n\n        // update the hovered date range after click to show the newly selected\n        // state, at leasts until the mouse moves again\n        this.handleDayMouseEnter(day, modifiers, e);\n\n        this.handleNextState(nextValue);\n    };\n\n    private getShorcutClickHandler(nextValue: DateRange) {\n        return () => this.handleNextState(nextValue);\n    }\n\n    private handleNextState(nextValue: DateRange) {\n        const { value } = this.state;\n        const nextState = getStateChange(value, nextValue, this.state, this.props.contiguousCalendarMonths);\n\n        if (!this.isControlled) {\n            this.setState(nextState);\n        }\n\n        Utils.safeInvoke(this.props.onChange, nextValue);\n    }\n\n    private handleLeftMonthChange = (newDate: Date) => {\n        const leftView = new MonthAndYear(newDate.getMonth(), newDate.getFullYear());\n        Utils.safeInvoke(this.props.dayPickerProps.onMonthChange, leftView.getFullDate());\n        this.updateLeftView(leftView);\n    };\n\n    private handleRightMonthChange = (newDate: Date) => {\n        const rightView = new MonthAndYear(newDate.getMonth(), newDate.getFullYear());\n        Utils.safeInvoke(this.props.dayPickerProps.onMonthChange, rightView.getFullDate());\n        this.updateRightView(rightView);\n    };\n\n    private handleLeftMonthSelectChange = (leftMonth: number) => {\n        const leftView = new MonthAndYear(leftMonth, this.state.leftView.getYear());\n        Utils.safeInvoke(this.props.dayPickerProps.onMonthChange, leftView.getFullDate());\n        this.updateLeftView(leftView);\n    };\n\n    private handleRightMonthSelectChange = (rightMonth: number) => {\n        const rightView = new MonthAndYear(rightMonth, this.state.rightView.getYear());\n        Utils.safeInvoke(this.props.dayPickerProps.onMonthChange, rightView.getFullDate());\n        this.updateRightView(rightView);\n    };\n\n    private updateLeftView(leftView: MonthAndYear) {\n        let rightView = this.state.rightView.clone();\n        if (!leftView.isBefore(rightView)) {\n            rightView = leftView.getNextMonth();\n        }\n        this.setViews(leftView, rightView);\n    }\n\n    private updateRightView(rightView: MonthAndYear) {\n        let leftView = this.state.leftView.clone();\n        if (!rightView.isAfter(leftView)) {\n            leftView = rightView.getPreviousMonth();\n        }\n        this.setViews(leftView, rightView);\n    }\n\n    /*\n    * The min / max months are offset by one because we are showing two months.\n    * We do a comparison check to see if\n    *   a) the proposed [Month, Year] change throws the two calendars out of order\n    *   b) the proposed [Month, Year] goes beyond the min / max months\n    * and rectify appropriately.\n    */\n    private handleLeftYearSelectChange = (leftDisplayYear: number) => {\n        let leftView = new MonthAndYear(this.state.leftView.getMonth(), leftDisplayYear);\n        Utils.safeInvoke(this.props.dayPickerProps.onMonthChange, leftView.getFullDate());\n        const { minDate, maxDate } = this.props;\n        const adjustedMaxDate = DateUtils.getDatePreviousMonth(maxDate);\n\n        const minMonthAndYear = new MonthAndYear(minDate.getMonth(), minDate.getFullYear());\n        const maxMonthAndYear = new MonthAndYear(adjustedMaxDate.getMonth(), adjustedMaxDate.getFullYear());\n\n        if (leftView.isBefore(minMonthAndYear)) {\n            leftView = minMonthAndYear;\n        } else if (leftView.isAfter(maxMonthAndYear)) {\n            leftView = maxMonthAndYear;\n        }\n\n        let rightView = this.state.rightView.clone();\n        if (!leftView.isBefore(rightView)) {\n            rightView = leftView.getNextMonth();\n        }\n\n        this.setViews(leftView, rightView);\n    };\n\n    private handleRightYearSelectChange = (rightDisplayYear: number) => {\n        let rightView = new MonthAndYear(this.state.rightView.getMonth(), rightDisplayYear);\n        Utils.safeInvoke(this.props.dayPickerProps.onMonthChange, rightView.getFullDate());\n        const { minDate, maxDate } = this.props;\n        const adjustedMinDate = DateUtils.getDateNextMonth(minDate);\n\n        const minMonthAndYear = new MonthAndYear(adjustedMinDate.getMonth(), adjustedMinDate.getFullYear());\n        const maxMonthAndYear = new MonthAndYear(maxDate.getMonth(), maxDate.getFullYear());\n\n        if (rightView.isBefore(minMonthAndYear)) {\n            rightView = minMonthAndYear;\n        } else if (rightView.isAfter(maxMonthAndYear)) {\n            rightView = maxMonthAndYear;\n        }\n\n        let leftView = this.state.leftView.clone();\n        if (!rightView.isAfter(leftView)) {\n            leftView = rightView.getPreviousMonth();\n        }\n\n        this.setViews(leftView, rightView);\n    };\n\n    private setViews(leftView: MonthAndYear, rightView: MonthAndYear) {\n        this.setState({ leftView, rightView });\n    }\n\n    private isShortcutInRange(shortcutDateRange: DateRange) {\n        return DateUtils.isDayRangeInRange(shortcutDateRange, [this.props.minDate, this.props.maxDate]);\n    }\n}\n\nfunction getStateChange(\n    value: DateRange,\n    nextValue: DateRange,\n    state: IDateRangePickerState,\n    contiguousCalendarMonths: boolean,\n): IDateRangePickerState {\n    let returnVal: IDateRangePickerState;\n\n    if (value != null && nextValue == null) {\n        returnVal = { value: [null, null] };\n    } else if (nextValue != null) {\n        const [nextValueStart, nextValueEnd] = nextValue;\n\n        let leftView = state.leftView.clone();\n        let rightView = state.rightView.clone();\n\n        /*\n        * Only end date selected.\n        * If the newly selected end date isn't in either of the displayed months, then\n        *   - set the right DayPicker to the month of the selected end date\n        *   - ensure the left DayPicker is before the right, changing if needed\n        */\n        if (nextValueStart == null && nextValueEnd != null) {\n            const nextValueEndMonthAndYear = new MonthAndYear(nextValueEnd.getMonth(), nextValueEnd.getFullYear());\n\n            if (!nextValueEndMonthAndYear.isSame(leftView) && !nextValueEndMonthAndYear.isSame(rightView)) {\n                rightView = nextValueEndMonthAndYear;\n                if (!leftView.isBefore(rightView)) {\n                    leftView = rightView.getPreviousMonth();\n                }\n            }\n            /*\n        * Only start date selected.\n        * If the newly selected start date isn't in either of the displayed months, then\n        *   - set the left DayPicker to the month of the selected start date\n        *   - ensure the right DayPicker is before the left, changing if needed\n        */\n        } else if (nextValueStart != null && nextValueEnd == null) {\n            const nextValueStartMonthAndYear = new MonthAndYear(\n                nextValueStart.getMonth(),\n                nextValueStart.getFullYear(),\n            );\n\n            if (!nextValueStartMonthAndYear.isSame(leftView) && !nextValueStartMonthAndYear.isSame(rightView)) {\n                leftView = nextValueStartMonthAndYear;\n                if (!rightView.isAfter(leftView)) {\n                    rightView = leftView.getNextMonth();\n                }\n            }\n            /*\n        * Both start date and end date selected.\n        */\n        } else if (nextValueStart != null && nextValueEnd != null) {\n            const nextValueStartMonthAndYear = new MonthAndYear(\n                nextValueStart.getMonth(),\n                nextValueStart.getFullYear(),\n            );\n            const nextValueEndMonthAndYear = new MonthAndYear(nextValueEnd.getMonth(), nextValueEnd.getFullYear());\n\n            /*\n            * Both start and end date months are identical\n            * If the selected month isn't in either of the displayed months, then\n            *   - set the left DayPicker to be the selected month\n            *   - set the right DayPicker to +1\n            */\n            if (DateUtils.areSameMonth(nextValueStart, nextValueEnd)) {\n                const potentialLeftEqualsNextValueStart = leftView.isSame(nextValueStartMonthAndYear);\n                const potentialRightEqualsNextValueStart = rightView.isSame(nextValueStartMonthAndYear);\n\n                if (potentialLeftEqualsNextValueStart || potentialRightEqualsNextValueStart) {\n                    // do nothing\n                } else {\n                    leftView = nextValueStartMonthAndYear;\n                    rightView = nextValueStartMonthAndYear.getNextMonth();\n                }\n                /*\n            * Different start and end date months, adjust display months.\n            */\n            } else {\n                if (!leftView.isSame(nextValueStartMonthAndYear)) {\n                    leftView = nextValueStartMonthAndYear;\n                    rightView = nextValueStartMonthAndYear.getNextMonth();\n                }\n                if (contiguousCalendarMonths === false && !rightView.isSame(nextValueEndMonthAndYear)) {\n                    rightView = nextValueEndMonthAndYear;\n                }\n            }\n        }\n\n        returnVal = {\n            leftView,\n            rightView,\n            value: nextValue,\n        };\n    } else {\n        returnVal = {};\n    }\n\n    return returnVal;\n}\n\nfunction createShortcut(label: string, dateRange: DateRange): IDateRangeShortcut {\n    return { dateRange, label };\n}\n\nfunction createDefaultShortcuts() {\n    const today = new Date();\n    const makeDate = (action: (d: Date) => void) => {\n        const returnVal = DateUtils.clone(today);\n        action(returnVal);\n        returnVal.setDate(returnVal.getDate() + 1);\n        return returnVal;\n    };\n\n    const oneWeekAgo = makeDate(d => d.setDate(d.getDate() - 7));\n    const oneMonthAgo = makeDate(d => d.setMonth(d.getMonth() - 1));\n    const threeMonthsAgo = makeDate(d => d.setMonth(d.getMonth() - 3));\n    const sixMonthsAgo = makeDate(d => d.setMonth(d.getMonth() - 6));\n    const oneYearAgo = makeDate(d => d.setFullYear(d.getFullYear() - 1));\n    const twoYearsAgo = makeDate(d => d.setFullYear(d.getFullYear() - 2));\n\n    return [\n        createShortcut(\"Past week\", [oneWeekAgo, today]),\n        createShortcut(\"Past month\", [oneMonthAgo, today]),\n        createShortcut(\"Past 3 months\", [threeMonthsAgo, today]),\n        createShortcut(\"Past 6 months\", [sixMonthsAgo, today]),\n        createShortcut(\"Past year\", [oneYearAgo, today]),\n        createShortcut(\"Past 2 years\", [twoYearsAgo, today]),\n    ];\n}\n\nexport const DateRangePickerFactory = React.createFactory(DateRangePicker);\n"]}