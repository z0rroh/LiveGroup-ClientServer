{"version":3,"sources":["../src/common/errors.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;;AAEH,IAAM,EAAE,GAAG,aAAa,CAAC;AACzB,IAAM,MAAM,GAAM,EAAE,kBAAe,CAAC;AAEvB,QAAA,aAAa,GAAM,EAAE,wCAAqC,CAAC;AAE3D,QAAA,uBAAuB,GAC7B,EAAE,mEAAgE,CAAC;AAE7D,QAAA,8BAA8B,GAAM,EAAE,oDAAiD,CAAC;AAExF,QAAA,oCAAoC,GAC1C,EAAE,4EAAyE,CAAC;AAEtE,QAAA,uBAAuB,GAAM,EAAE,+CAA4C,CAAC;AAE5E,QAAA,gCAAgC,GACtC,EAAE,kGAA+F,CAAC;AAE5F,QAAA,qBAAqB,GAC3B,EAAE,mFAAgF,CAAC;AAC7E,QAAA,mCAAmC,GACzC,EAAE,8EAA2E,CAAC;AACxE,QAAA,mCAAmC,GACzC,EAAE,iFAA8E,CAAC;AAC3E,QAAA,0CAA0C,GAChD,EAAE,6EAA0E,CAAC;AACvE,QAAA,0CAA0C,GAChD,EAAE,6EAA0E,CAAC;AACvE,QAAA,oCAAoC,GAC1C,EAAE,wEAAqE,CAAC;AAClE,QAAA,4BAA4B,GAClC,EAAE,qDAAkD,CAAC;AAE/C,QAAA,uBAAuB,GAC7B,EAAE,mEAAgE,CAAC;AAC7D,QAAA,yBAAyB,GAC/B,EAAE,uFAAoF,CAAC;AACjF,QAAA,8BAA8B,GACpC,EAAE,8EAA2E;MAC9E,qGAAqG,CAAC;AAC/F,QAAA,2BAA2B,GACjC,EAAE,oFAAiF,CAAC;AAC9E,QAAA,0BAA0B,GAChC,EAAE,+EAA4E,CAAC;AACzE,QAAA,0BAA0B,GAAM,EAAE,0DAAuD,CAAC;AAC1F,QAAA,yBAAyB,GAAM,EAAE,6CAA0C,CAAC;AAC5E,QAAA,mCAAmC,GACzC,MAAM,+FAA4F,CAAC;AAC7F,QAAA,6BAA6B,GACnC,EAAE,0FAAuF,CAAC;AACpF,QAAA,uCAAuC,GAAM,EAAE,2DAAwD,CAAC;AAExG,QAAA,sCAAsC,GAC5C,EAAE,kGAA+F,CAAC;AAE5F,QAAA,gBAAgB,GAAM,EAAE,kDAA+C,CAAC;AACxE,QAAA,sBAAsB,GAAM,EAAE,uDAAoD,CAAC;AACnF,QAAA,sBAAsB,GAAM,EAAE,wEAAqE,CAAC;AAEpG,QAAA,gBAAgB,GAAM,EAAE,yDAAsD,CAAC;AAC/E,QAAA,aAAa,GAAM,EAAE,2EAAwE,CAAC;AAC9F,QAAA,oBAAoB,GAAM,MAAM,wEAAqE;MAC5G,8CAA8C,CAAC;AAExC,QAAA,mBAAmB,GAAM,EAAE,8EAA2E,CAAC;AACvG,QAAA,uBAAuB,GAAM,EAAE,uDAAoD,CAAC;AAEpF,QAAA,0BAA0B,GAAM,EAAE,uDAAoD,CAAC;AACvF,QAAA,kCAAkC,GACxC,EAAE,sEAAmE,CAAC","file":"common/errors.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nconst ns = \"[Blueprint]\";\nconst deprec = `${ns} DEPRECATION:`;\n\nexport const CLAMP_MIN_MAX = `${ns} clamp: max cannot be less than min`;\n\nexport const ALERT_WARN_CANCEL_PROPS =\n    `${ns} <Alert> cancelButtonText and onCancel should be set together.`;\n\nexport const COLLAPSIBLE_LIST_INVALID_CHILD = `${ns} <CollapsibleList> children must be <MenuItem>s`;\n\nexport const CONTEXTMENU_WARN_DECORATOR_NO_METHOD =\n    `${ns} @ContextMenuTarget-decorated class should implement renderContextMenu.`;\n\nexport const HOTKEYS_HOTKEY_CHILDREN = `${ns} <Hotkeys> only accepts <Hotkey> children.`;\n\nexport const MENU_WARN_CHILDREN_SUBMENU_MUTEX =\n    `${ns} <MenuItem> children and submenu props are mutually exclusive, with children taking priority.`;\n\nexport const NUMERIC_INPUT_MIN_MAX =\n    `${ns} <NumericInput> requires min to be strictly less than max if both are defined.`;\nexport const NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND =\n    `${ns} <NumericInput> requires minorStepSize to be strictly less than stepSize.`;\nexport const NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND =\n    `${ns} <NumericInput> requires majorStepSize to be strictly greater than stepSize.`;\nexport const NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE =\n    `${ns} <NumericInput> requires minorStepSize to be strictly greater than zero.`;\nexport const NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE =\n    `${ns} <NumericInput> requires majorStepSize to be strictly greater than zero.`;\nexport const NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE =\n    `${ns} <NumericInput> requires stepSize to be strictly greater than zero.`;\nexport const NUMERIC_INPUT_STEP_SIZE_NULL =\n    `${ns} <NumericInput> requires stepSize to be defined.`;\n\nexport const POPOVER_REQUIRES_TARGET =\n    `${ns} <Popover> requires target prop or at least one child element.`;\nexport const POPOVER_MODAL_INTERACTION =\n    `${ns} <Popover isModal={true}> requires interactionKind={PopoverInteractionKind.CLICK}.`;\nexport const POPOVER_WARN_TOO_MANY_CHILDREN =\n    `${ns} <Popover> supports one or two children; additional children are ignored.`\n    + ` First child is the target, second child is the content. You may instead supply these two as props.`;\nexport const POPOVER_WARN_DOUBLE_CONTENT =\n    `${ns} <Popover> with two children ignores content prop; use either prop or children.`;\nexport const POPOVER_WARN_DOUBLE_TARGET =\n    `${ns} <Popover> with children ignores target prop; use either prop or children.`;\nexport const POPOVER_WARN_EMPTY_CONTENT = `${ns} Disabling <Popover> with empty/whitespace content...`;\nexport const POPOVER_WARN_MODAL_INLINE = `${ns} <Popover inline={true}> ignores isModal`;\nexport const POPOVER_WARN_DEPRECATED_CONSTRAINTS =\n    `${deprec} <Popover> constraints and useSmartPositioning are deprecated. Use tetherOptions directly.`;\nexport const POPOVER_WARN_INLINE_NO_TETHER =\n    `${ns} <Popover inline={true}> ignores tetherOptions, constraints, and useSmartPositioning.`;\nexport const POPOVER_WARN_UNCONTROLLED_ONINTERACTION = `${ns} <Popover> onInteraction is ignored when uncontrolled.`;\n\nexport const RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX =\n    `${ns} <RadioGroup> children and options prop are mutually exclusive, with options taking priority.`;\n\nexport const SLIDER_ZERO_STEP = `${ns} <Slider> stepSize must be greater than zero.`;\nexport const SLIDER_ZERO_LABEL_STEP = `${ns} <Slider> labelStepSize must be greater than zero.`;\nexport const RANGESLIDER_NULL_VALUE = `${ns} <RangeSlider> value prop must be an array of two non-null numbers.`;\n\nexport const TABS_FIRST_CHILD = `${ns} First child of <Tabs> component must be a <TabList>`;\nexport const TABS_MISMATCH = `${ns} Number of <Tab> components must equal number of <TabPanel> components`;\nexport const TABS_WARN_DEPRECATED = `${deprec} <Tabs> is deprecated since v1.11.0; consider upgrading to <Tabs2>.`\n    + \" https://blueprintjs.com/#components.tabs.js\";\n\nexport const TOASTER_WARN_INLINE = `${ns} Toaster.create() ignores inline prop as it always creates a new element.`;\nexport const TOASTER_WARN_LEFT_RIGHT = `${ns} Toaster does not support LEFT or RIGHT positions.`;\n\nexport const DIALOG_WARN_NO_HEADER_ICON = `${ns} <Dialog> iconName is ignored if title is omitted.`;\nexport const DIALOG_WARN_NO_HEADER_CLOSE_BUTTON =\n    `${ns} <Dialog> isCloseButtonShown prop is ignored if title is omitted.`;\n"]}