{"version":3,"sources":["../src/common/utils.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;;AAEH,mCAAyC;AAKzC,sEAAsE;AACtE,mBAA0B,GAAW;IACjC,MAAM,CAAC,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,GAAG,CAAC;AACzF,CAAC;AAFD,8BAEC;AAED,qEAAqE;AACrE,qCAAqC;AACrC,oBAA2B,KAAU;IACjC,MAAM,CAAC,OAAO,KAAK,KAAK,UAAU,CAAC;AACvC,CAAC;AAFD,gCAEC;AAYD,qCAAqC;AACrC,oBAA2B,IAA0B;IAAE,cAAc;SAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;QAAd,6BAAc;;IACjE,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,IAAI,eAAI,IAAI,EAAE;IACzB,CAAC;AACL,CAAC;AAJD,gCAIC;AAED,6BAAoC,OAAoB,EAAE,WAAwB;IAC9E,MAAM,CAAC,OAAO,KAAK,WAAW,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AACpE,CAAC;AAFD,kDAEC;AAED;;;;GAIG;AACH,4BAAmC,CAAa,EAAE,CAAa;IAA5B,kBAAA,EAAA,MAAa;IAAE,kBAAA,EAAA,MAAa;IAC3D,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;AAC/B,CAAC;AAFD,gDAEC;AAED;;;GAGG;AACH,qBAA4B,CAAS,EAAE,CAAS,EAAE,SAAmB;IAAnB,0BAAA,EAAA,mBAAmB;IACjE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC;AACxC,CAAC;AAFD,kCAEC;AAED,2GAA2G;AAC3G,eAAsB,GAAW,EAAE,GAAW,EAAE,GAAW;IACvD,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;QACZ,MAAM,IAAI,KAAK,CAAC,sBAAa,CAAC,CAAC;IACnC,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;AAC7C,CAAC;AALD,sBAKC;AAED,gEAAgE;AAChE,4BAAmC,GAAW;IAC1C,EAAE,CAAC,CAAC,OAAO,GAAG,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACrD,MAAM,CAAC,CAAC,CAAC;IACb,CAAC;IACD,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC/C,CAAC;AALD,gDAKC;AAED;;;;GAIG;AACH,uBAA8B,MAAmB,EAAE,SAAiB,EAAE,YAAoB;IACtF,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,sDAAsD;IACtD,IAAM,IAAI,GAAG,UAAC,KAAY;QACtB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC;QAAC,CAAC;QACxB,OAAO,GAAG,IAAI,CAAC;QACf,qBAAqB,CAAC;YAClB,MAAM,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;YAC3D,OAAO,GAAG,KAAK,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IACF,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACzC,MAAM,CAAC,IAAI,CAAC;AAChB,CAAC;AAbD,sCAaC;AAAA,CAAC","file":"common/utils.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport { CLAMP_MIN_MAX } from \"./errors\";\n\n// only accessible within this file, so use `Utils.isNodeEnv` from the outside.\ndeclare var process: { env: any };\n\n/** Returns whether `process.env.NODE_ENV` exists and equals `env`. */\nexport function isNodeEnv(env: string) {\n    return typeof process !== \"undefined\" && process.env && process.env.NODE_ENV === env;\n}\n\n/** Returns whether the value is a function. Acts as a type guard. */\n// tslint:disable-next-line:ban-types\nexport function isFunction(value: any): value is Function {\n    return typeof value === \"function\";\n}\n\n/** Safely invoke the function with the given arguments, if it is indeed a function, and return its value. */\nexport function safeInvoke<R>(func: (() => R) | undefined): R;\nexport function safeInvoke<A, R>(func: ((arg1: A) => R) | undefined, arg1: A): R;\nexport function safeInvoke<A, B, R>(func: ((arg1: A, arg2: B) => R) | undefined, arg1: A, arg2: B): R;\nexport function safeInvoke<A, B, C, R>(\n    func: ((arg1: A, arg2: B, arg3: C) => R) | undefined,\n    arg1: A,\n    arg2: B,\n    arg3: C,\n): R;\n// tslint:disable-next-line:ban-types\nexport function safeInvoke(func: Function | undefined, ...args: any[]) {\n    if (isFunction(func)) {\n        return func(...args);\n    }\n}\n\nexport function elementIsOrContains(element: HTMLElement, testElement: HTMLElement) {\n    return element === testElement || element.contains(testElement);\n}\n\n/**\n * Returns the difference in length between two arrays. A `null` argument is considered an empty list.\n * The return value will be positive if `a` is longer than `b`, negative if the opposite is true,\n * and zero if their lengths are equal.\n */\nexport function arrayLengthCompare(a: any[] = [], b: any[] = []) {\n    return a.length - b.length;\n}\n\n/**\n * Returns true if the two numbers are within the given tolerance of each other.\n * This is useful to correct for floating point precision issues, less useful for integers.\n */\nexport function approxEqual(a: number, b: number, tolerance = 0.00001) {\n    return Math.abs(a - b) <= tolerance;\n}\n\n/** Clamps the given number between min and max values. Returns value if within range, or closest bound. */\nexport function clamp(val: number, min: number, max: number) {\n    if (max < min) {\n        throw new Error(CLAMP_MIN_MAX);\n    }\n    return Math.min(Math.max(val, min), max);\n}\n\n/** Returns the number of decimal places in the given number. */\nexport function countDecimalPlaces(num: number) {\n    if (typeof num !== \"number\" || Math.floor(num) === num) {\n        return 0;\n    }\n    return num.toString().split(\".\")[1].length;\n}\n\n/**\n * Throttle an event on an EventTarget by wrapping it in `requestAnimationFrame` call.\n * Returns the event handler that was bound to given eventName so you can clean up after yourself.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events/scroll\n */\nexport function throttleEvent(target: EventTarget, eventName: string, newEventName: string) {\n    let running = false;\n    /* istanbul ignore next: borrowed directly from MDN */\n    const func = (event: Event) => {\n        if (running) { return; }\n        running = true;\n        requestAnimationFrame(() => {\n            target.dispatchEvent(new CustomEvent(newEventName, event));\n            running = false;\n        });\n    };\n    target.addEventListener(eventName, func);\n    return func;\n};\n"]}