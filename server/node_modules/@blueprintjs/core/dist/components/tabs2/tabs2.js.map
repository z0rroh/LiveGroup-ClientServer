{"version":3,"sources":["../src/components/tabs2/tabs2.tsx"],"names":[],"mappings":"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","file":"components/tabs2/tabs2.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as PureRender from \"pure-render-decorator\";\nimport * as React from \"react\";\n\nimport { AbstractComponent } from \"../../common/abstractComponent\";\nimport * as Classes from \"../../common/classes\";\nimport * as Keys from \"../../common/keys\";\nimport { IProps } from \"../../common/props\";\nimport { safeInvoke } from \"../../common/utils\";\n\nimport { ITab2Props, Tab2, TabId } from \"./tab2\";\nimport { generateTabPanelId, generateTabTitleId, TabTitle } from \"./tabTitle\";\n\nexport const Expander: React.SFC<{}> = () => <div className=\"pt-flex-expander\" />;\n\ntype TabElement = React.ReactElement<ITab2Props & { children: React.ReactNode }>;\n\nconst TAB_SELECTOR = `.${Classes.TAB}`;\n\nexport interface ITabs2Props extends IProps {\n    /**\n     * Whether the selected tab indicator should animate its movement.\n     * @default true\n     */\n    animate?: boolean;\n\n    /**\n     * Initial selected tab `id`, for uncontrolled usage.\n     * Note that this prop refers only to `<Tab>` children; other types of elements are ignored.\n     * @default first tab\n     */\n    defaultSelectedTabId?: TabId;\n\n    /**\n     * Unique identifier for this `Tabs` container. This will be combined with the `id` of each\n     * `Tab` child to generate ARIA accessibility attributes. IDs are required and should be\n     * unique on the page to support server-side rendering.\n     */\n    id: TabId;\n\n    /**\n     * Whether inactive tab panels should be removed from the DOM and unmounted in React.\n     * This can be a performance enhancement when rendering many complex panels, but requires\n     * careful support for unmounting and remounting.\n     * @default false\n     */\n    renderActiveTabPanelOnly?: boolean;\n\n    /**\n     * Selected tab `id`, for controlled usage.\n     * Providing this prop will put the component in controlled mode.\n     * Unknown ids will result in empty selection (no errors).\n     */\n    selectedTabId?: TabId;\n\n    /**\n     * Whether to show tabs stacked vertically on the left side.\n     * @default false\n     */\n    vertical?: boolean;\n\n    /**\n     * A callback function that is invoked when a tab in the tab list is clicked.\n     */\n    onChange?(newTabId: TabId, prevTabId: TabId, event: React.MouseEvent<HTMLElement>): void;\n}\n\nexport interface ITabs2State {\n    indicatorWrapperStyle?: React.CSSProperties;\n    selectedTabId?: TabId;\n}\n\n@PureRender\nexport class Tabs2 extends AbstractComponent<ITabs2Props, ITabs2State> {\n    /** Insert a `Tabs2.Expander` between any two children to right-align all subsequent children. */\n    public static Expander = Expander;\n\n    public static Tab = Tab2;\n\n    public static defaultProps: Partial<ITabs2Props> = {\n        animate: true,\n        renderActiveTabPanelOnly: false,\n        vertical: false,\n    };\n\n    public static displayName = \"Blueprint.Tabs2\";\n\n    private tablistElement: HTMLDivElement;\n    private refHandlers = {\n        tablist: (tabElement: HTMLDivElement) => this.tablistElement = tabElement,\n    };\n\n    constructor(props?: ITabs2Props) {\n        super(props);\n        const selectedTabId = this.getInitialSelectedTabId();\n        this.state = { selectedTabId };\n    }\n\n    public render() {\n        const { indicatorWrapperStyle, selectedTabId } = this.state;\n\n        const tabTitles = React.Children.map(this.props.children, (child) => (\n            isTab(child) ? this.renderTabTitle(child) : child\n        ));\n\n        const tabPanels = this.getTabChildren()\n            .filter(this.props.renderActiveTabPanelOnly ? (tab) => tab.props.id === selectedTabId : () => true)\n            .map(this.renderTabPanel);\n\n        const tabIndicator = (\n            <div className=\"pt-tab-indicator-wrapper\" style={indicatorWrapperStyle}>\n                <div className=\"pt-tab-indicator\" />\n            </div>\n        );\n\n        const classes = classNames(Classes.TABS, { [Classes.VERTICAL]: this.props.vertical }, this.props.className);\n\n        return (\n            <div className={classes}>\n                <div\n                    className={Classes.TAB_LIST}\n                    onKeyDown={this.handleKeyDown}\n                    onKeyPress={this.handleKeyPress}\n                    ref={this.refHandlers.tablist}\n                    role=\"tablist\"\n                >\n                    {this.props.animate ? tabIndicator : undefined}\n                    {tabTitles}\n                </div>\n                {tabPanels}\n            </div>\n        );\n    }\n\n    public componentDidMount() {\n        this.moveSelectionIndicator();\n    }\n\n    public componentWillReceiveProps({ selectedTabId }: ITabs2Props) {\n        if (selectedTabId !== undefined) {\n            // keep state in sync with controlled prop, so state is canonical source of truth\n            this.setState({ selectedTabId });\n        }\n    }\n\n    public componentDidUpdate(_prevProps: ITabs2Props, prevState: ITabs2State) {\n        if (this.state.selectedTabId !== prevState.selectedTabId) {\n            this.moveSelectionIndicator();\n        }\n    }\n\n    private getInitialSelectedTabId() {\n        // NOTE: providing an unknown ID will hide the selection\n        const { defaultSelectedTabId, selectedTabId } = this.props;\n        if (selectedTabId !== undefined) {\n            return selectedTabId;\n        } else if (defaultSelectedTabId !== undefined) {\n            return defaultSelectedTabId;\n        } else {\n            // select first tab in absence of user input\n            const tabs = this.getTabChildren();\n            return tabs.length === 0 ? undefined : tabs[0].props.id;\n        }\n    }\n\n    private getKeyCodeDirection(e: React.KeyboardEvent<HTMLElement>) {\n        if (isEventKeyCode(e, Keys.ARROW_LEFT, Keys.ARROW_UP)) {\n            return -1;\n        } else if (isEventKeyCode(e, Keys.ARROW_RIGHT, Keys.ARROW_DOWN)) {\n            return 1;\n        }\n        return undefined;\n    }\n\n    /** Filters this.props.children to only `<Tab>`s */\n    private getTabChildren() {\n        return React.Children.toArray(this.props.children).filter(isTab) as TabElement[];\n    }\n\n    /** Queries root HTML element for all `.pt-tab`s with optional filter selector */\n    private getTabElements(subselector = \"\") {\n        if (this.tablistElement == null) {\n            return [] as Elements;\n        }\n        return this.tablistElement.queryAll(TAB_SELECTOR + subselector);\n    }\n\n    private handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        const focusedElement = document.activeElement.closest(TAB_SELECTOR);\n        // rest of this is potentially expensive and futile, so bail if no tab is focused\n        if (focusedElement == null) { return; }\n\n        // must rely on DOM state because we have no way of mapping `focusedElement` to a JSX.Element\n        const enabledTabElements = this.getTabElements()\n            .filter((el) => el.getAttribute(\"aria-disabled\") === \"false\");\n        const focusedIndex = enabledTabElements.indexOf(focusedElement);\n        const direction = this.getKeyCodeDirection(e);\n\n        if (focusedIndex >= 0 && direction !== undefined) {\n            e.preventDefault();\n            const { length } = enabledTabElements;\n            // auto-wrapping at 0 and `length`\n            const nextFocusedIndex = (focusedIndex + direction + length) % length;\n            (enabledTabElements[nextFocusedIndex] as HTMLElement).focus();\n        }\n    }\n\n    private handleKeyPress = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        const targetTabElement = (e.target as HTMLElement).closest(TAB_SELECTOR) as HTMLElement;\n        if (targetTabElement != null && isEventKeyCode(e, Keys.SPACE, Keys.ENTER)) {\n            e.preventDefault();\n            targetTabElement.click();\n        }\n    }\n\n    private handleTabClick = (newTabId: TabId, event: React.MouseEvent<HTMLElement>) => {\n        safeInvoke(this.props.onChange, newTabId, this.state.selectedTabId, event);\n        if (this.props.selectedTabId === undefined) {\n            this.setState({ selectedTabId: newTabId });\n        }\n    }\n\n    /**\n     * Calculate the new height, width, and position of the tab indicator.\n     * Store the CSS values so the transition animation can start.\n     */\n    private moveSelectionIndicator() {\n        if (this.tablistElement === undefined) { return; }\n\n        const tabIdSelector = `${TAB_SELECTOR}[data-tab-id=\"${this.state.selectedTabId}\"]`;\n        const selectedTabElement = this.tablistElement.query(tabIdSelector) as HTMLElement;\n\n        let indicatorWrapperStyle: React.CSSProperties = { display: \"none\" };\n        if (selectedTabElement != null) {\n            const { clientHeight, clientWidth, offsetLeft, offsetTop } = selectedTabElement;\n            indicatorWrapperStyle = {\n                height: clientHeight,\n                transform: `translateX(${Math.floor(offsetLeft)}px) translateY(${Math.floor(offsetTop)}px)`,\n                width: clientWidth,\n            };\n        }\n        this.setState({ indicatorWrapperStyle });\n    }\n\n    private renderTabPanel = (tab: TabElement) => {\n        const { className, panel, id } = tab.props;\n        if (panel === undefined) {\n            return undefined;\n        }\n        return (\n            <div\n                aria-labelledby={generateTabTitleId(this.props.id, id)}\n                aria-hidden={id !== this.state.selectedTabId}\n                className={classNames(Classes.TAB_PANEL, className)}\n                id={generateTabPanelId(this.props.id, id)}\n                key={id}\n                role=\"tabpanel\"\n            >\n                {panel}\n            </div>\n        );\n    }\n\n    private renderTabTitle = (tab: TabElement) => {\n        const { id } = tab.props;\n        return (\n            <TabTitle\n                {...tab.props}\n                parentId={this.props.id}\n                onClick={this.handleTabClick}\n                selected={id === this.state.selectedTabId}\n            />\n        );\n    }\n}\n\nexport const Tabs2Factory = React.createFactory(Tabs2);\n\nfunction isEventKeyCode(e: React.KeyboardEvent<HTMLElement>, ...codes: number[]) {\n    return codes.indexOf(e.which) >= 0;\n}\n\nfunction isTab(child: React.ReactChild): child is TabElement {\n    return child != null && (child as JSX.Element).type === Tab2;\n}\n"]}